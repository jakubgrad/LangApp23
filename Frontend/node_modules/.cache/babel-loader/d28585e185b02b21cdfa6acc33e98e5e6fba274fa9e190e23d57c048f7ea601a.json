{"ast":null,"code":"import _slicedToArray from\"/home/gradjaku/Documents/LangApp/1.0/4.12/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import Entry from'./components/Entry';import Notification from'./components/Notification';import entryService from'./services/entries';import Blog from'./Blog';import TopNavBar from'./TopNavBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var exampleBook=require('./exampleBook.json');console.log(exampleBook);var _useState=useState([{\"name\":\"Arto Hellas\",\"number\":\"040-123456\",\"id\":1}]),_useState2=_slicedToArray(_useState,2),entries=_useState2[0],setEntries=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newNumber=_useState6[0],setNewNumber=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),errorMessage=_useState8[0],setErrorMessage=_useState8[1];useEffect(function(){entryService.getAll().then(function(initialEntries){console.log(\"MongoDB connection successful\");setEntries(initialEntries);});},[]);var addEntry=function addEntry(event){event.preventDefault();var entryObject={name:newName,number:newNumber};if(entries.find(function(entry){return entry.name===newName;})){console.log(\"Name already in database!\");var entry=entries.find(function(entry){return entry.name===newName;});var id=entry.id;entryService.update(id,entryObject).then(function(returnedEntry){setEntries(entries.map(function(entry){return entry.id!==id?entry:returnedEntry;}));setNewName('');setNewNumber('');}).catch(function(error){var error_message=\"400 (Bad request). \"+error.response.data.error;setErrorMessage(error_message);setTimeout(function(){setErrorMessage(null);},5000);});}else{entryService.create(entryObject).then(function(returnedEntry){setEntries(entries.concat(returnedEntry));setNewName('');}).catch(function(error){var error_message=\"400 (Bad request). \"+error.response.data.error;setErrorMessage(error_message);setTimeout(function(){setErrorMessage(null);},5000);});}};var handleNameChange=function handleNameChange(event){setNewName(event.target.value);};var handleNumberChange=function handleNumberChange(event){setNewNumber(event.target.value);};var deleteById=function deleteById(id){entryService.deleteById(id).then(function(returnedEntry){console.log(\"Delete entry of id $ { id } ??\",returnedEntry);setEntries(entries.filter(function(entry){return entry.id!==id;}));});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TopNavBar,{}),/*#__PURE__*/_jsx(Blog,{text:exampleBook})]});};export default App;","map":{"version":3,"names":["useState","useEffect","Entry","Notification","entryService","Blog","TopNavBar","App","exampleBook","require","console","log","entries","setEntries","newName","setNewName","newNumber","setNewNumber","errorMessage","setErrorMessage","getAll","then","initialEntries","addEntry","event","preventDefault","entryObject","name","number","find","entry","id","update","returnedEntry","map","catch","error","error_message","response","data","setTimeout","create","concat","handleNameChange","target","value","handleNumberChange","deleteById","filter"],"sources":["/home/gradjaku/Documents/LangApp/1.0/4.12/Frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Entry from './components/Entry'\nimport Notification from './components/Notification'\nimport entryService from './services/entries'\nimport Blog from './Blog'\nimport TopNavBar from './TopNavBar'\n\n\nconst App = () => {\n  const exampleBook = require('./exampleBook.json') \n  console.log(exampleBook);\n  const [entries, setEntries] = useState([\n  {\n      \"name\": \"Arto Hellas\",\n      \"number\": \"040-123456\",\n      \"id\": 1\n    }\n  ])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    entryService\n      .getAll()\n      .then(initialEntries => {\n        console.log(\"MongoDB connection successful\");\n        setEntries(initialEntries)\n      })\n  }, [])\n\n  const addEntry = (event) => {\n    event.preventDefault()\n\n    const entryObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if(entries.find(entry => entry.name === newName)) {\n      console.log(\"Name already in database!\")\n      const entry = entries.find(entry => entry.name === newName)\n      const id = entry.id\n      entryService\n        .update(id, entryObject).then(returnedEntry => {\n          setEntries(entries.map(entry => entry.id !== id ? entry : returnedEntry))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          const error_message = \"400 (Bad request). \" + error.response.data.error\n          setErrorMessage(\n            error_message\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n\n        })\n\n    } else {\n    entryService\n      .create(entryObject)\n        .then(returnedEntry => {\n        setEntries(entries.concat(returnedEntry))\n        setNewName('')\n      })\n      .catch(error => {\n        const error_message = \"400 (Bad request). \" + error.response.data.error\n        setErrorMessage(\n          error_message\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n        \n      \n\n    }\n  \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n    const deleteById = id => { \n      entryService\n        .deleteById(id).then(returnedEntry => { \n          console.log(\"Delete entry of id $ { id } ??\", returnedEntry);\n          setEntries(entries.filter(entry => entry.id !== id))\n        })\n    }\n\n  return (\n    <div>\n    <TopNavBar />\n    <Blog text = {exampleBook}/>\n    \n    {\n      /*\n      <Notification message={errorMessage} />\n      <ul>\n        <ul>\n          {entries.map(entry => \n            <Entry\n              key={entry.id}\n              entry={entry}\n              deleteById={() => deleteById(entry.id)}\n            />\n          )}\n        </ul>\n      </ul>\n      <form onSubmit={addEntry}>\n        <input placeholder=\"Name\" value={newName} onChange={handleNameChange} />\n        <input placeholder=\"Number\" value={newNumber} onChange={handleNumberChange} />\n        <button type=\"submit\">save</button>\n      </form>\n          */}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}