{"ast":null,"code":"import _slicedToArray from\"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var Word=function Word(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];var base=props.base===undefined?\"mennä\"//a word for when base is absent\n:props.base;var word=props.word;var fetchWordDescription=props.fetchWordDescription;var handleClick=function handleClick(){// Set the state to true when clicked\nsetClicked(true);// Call fetchWordDescription as before\nfetchWordDescription(word.replaceAll(\".\",\"\").replaceAll(\",\",\"\").replaceAll(\"(\",\"\").replaceAll(\")\",\"\").replaceAll(\"-\",\"\"));// Reset the state after a short delay (e.g., 500ms) to remove the blue background\nsetTimeout(function(){setClicked(false);},500);};var style={backgroundColor:clicked?'blue':'transparent',cursor:'pointer'};return/*#__PURE__*/_jsx(\"span\",{onClick:handleClick,style:style,children:word});};export default Word;","map":{"version":3,"names":["React","useState","Word","props","clicked","setClicked","base","undefined","word","fetchWordDescription","handleClick","replaceAll","setTimeout","style","backgroundColor","cursor"],"sources":["/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Word.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Word = (props) => {\n  const [clicked, setClicked] = useState(false);\n\n  const base = props.base === undefined\n    ? \"mennä\" //a word for when base is absent\n    : props.base;\n\n  const word = props.word;\n  const fetchWordDescription = props.fetchWordDescription;\n\n  const handleClick = () => {\n    // Set the state to true when clicked\n    setClicked(true);\n\n    // Call fetchWordDescription as before\n    fetchWordDescription(\n      word\n        .replaceAll(\".\", \"\")\n        .replaceAll(\",\", \"\")\n        .replaceAll(\"(\", \"\")\n        .replaceAll(\")\", \"\")\n        .replaceAll(\"-\", \"\")\n    );\n\n    // Reset the state after a short delay (e.g., 500ms) to remove the blue background\n    setTimeout(() => {\n      setClicked(false);\n    }, 500);\n  };\n\n  const style = {\n    backgroundColor: clicked ? 'blue' : 'transparent',\n    cursor: 'pointer',\n  };\n\n  return (\n    <span onClick={handleClick} style={style}>\n      {word}\n    </span>\n  );\n};\n\nexport default Word;"],"mappings":"6IAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,2CAExC,GAAMC,KAAI,CAAG,QAAPA,KAAI,CAAIC,KAAK,CAAK,CACtB,cAA8BF,QAAQ,CAAC,KAAK,CAAC,wCAAtCG,OAAO,eAAEC,UAAU,eAE1B,GAAMC,KAAI,CAAGH,KAAK,CAACG,IAAI,GAAKC,SAAS,CACjC,OAAQ;AAAA,CACRJ,KAAK,CAACG,IAAI,CAEd,GAAME,KAAI,CAAGL,KAAK,CAACK,IAAI,CACvB,GAAMC,qBAAoB,CAAGN,KAAK,CAACM,oBAAoB,CAEvD,GAAMC,YAAW,CAAG,QAAdA,YAAW,EAAS,CACxB;AACAL,UAAU,CAAC,IAAI,CAAC,CAEhB;AACAI,oBAAoB,CAClBD,IAAI,CACDG,UAAU,CAAC,GAAG,CAAE,EAAE,CAAC,CACnBA,UAAU,CAAC,GAAG,CAAE,EAAE,CAAC,CACnBA,UAAU,CAAC,GAAG,CAAE,EAAE,CAAC,CACnBA,UAAU,CAAC,GAAG,CAAE,EAAE,CAAC,CACnBA,UAAU,CAAC,GAAG,CAAE,EAAE,CAAC,CACvB,CAED;AACAC,UAAU,CAAC,UAAM,CACfP,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,CAED,GAAMQ,MAAK,CAAG,CACZC,eAAe,CAAEV,OAAO,CAAG,MAAM,CAAG,aAAa,CACjDW,MAAM,CAAE,SACV,CAAC,CAED,mBACE,aAAM,OAAO,CAAEL,WAAY,CAAC,KAAK,CAAEG,KAAM,UACtCL,IAAI,EACA,CAEX,CAAC,CAED,cAAeN,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}