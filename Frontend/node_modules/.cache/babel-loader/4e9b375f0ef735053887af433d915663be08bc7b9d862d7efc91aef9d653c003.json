{"ast":null,"code":"import _slicedToArray from\"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import'./index.css';import{useState,useEffect}from'react';import BookList from'./components/BookList';import entryService from'./services/entries';import Word from'./Word';import axios from'axios';//import { response } from 'express';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Blog=function Blog(props){var title=props.title;console(\"slug aka title in Blog.js\",title);var exampleBook=require('./exampleBook.json');var _useState=useState(''),_useState2=_slicedToArray(_useState,2),chosenWord=_useState2[0],setChosenWord=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),dict=_useState4[0],setDict=_useState4[1];var _useState5=useState(exampleBook),_useState6=_slicedToArray(_useState5,2),book=_useState6[0],setBook=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),boxOnTheRight=_useState8[0],setBoxOnTheRight=_useState8[1];console.log(boxOnTheRight);useEffect(function(){entryService.getBook(title).then(function(response){console.log(\"GetBook succeeded!\");console.log(response);if(response!==''){console.log(\"response has something\");console.log(\"response.pages\");console.log(\"response.pages[1]\",response.pages[1]);console.log(\"response.pages[\\\"1\\\"]\",response.pages[\"1\"]);setBook(response);}else{console.log(\"response empty\");}}).catch(function(err){return console.log(\"GetBook failed\");});},[]);var fetchWordDescription=function fetchWordDescription(word){entryService.getWord(word).then(function(response){if(response===undefined){console.log(\"Could not fetch word description using this form of the word\",word);//const endpoint = `http://127.0.0.1:5000/pygetword/${encodeURI(word)}`;\nvar endpoint=\"https://langapp23flask.onrender.com/pygetword/\".concat(encodeURI(word));console.log(\"Sending requests to \".concat(endpoint));axios.get(endpoint).then(function(response){//console.log(\"respone: \", response);\nconsole.log(\"respone data: \",response.data);var file=response.data[\"word\"];console.log(file);// Sending the file data as the response\nentryService.getWord(word).then(function(response){console.log(response);setBoxOnTheRight(JSON.stringify(response));});}).catch(function(err){console.error('Error occurred again',err);});}else{console.log(\"Response from engine\",response);setBoxOnTheRight(JSON.stringify(response));}}).catch(function(err){console.log(\"caught an error in connecting through entryService\");});};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(BookList,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:book.title}),/*#__PURE__*/_jsx(\"p\",{children:book.pages[1].split(\" \").map(function(word,index){return/*#__PURE__*/_jsx(Word,{word:word,base:book.pageTranslations[1][word],fetchWordDescription:fetchWordDescription},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[boxOnTheRight,\"Box on the right\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"bb\",boxOnTheRight]})]})]});};export default Blog;","map":{"version":3,"names":["React","useState","useEffect","BookList","entryService","Word","axios","Blog","props","title","console","exampleBook","require","chosenWord","setChosenWord","dict","setDict","book","setBook","boxOnTheRight","setBoxOnTheRight","log","getBook","then","response","pages","catch","err","fetchWordDescription","word","getWord","undefined","endpoint","encodeURI","get","data","file","JSON","stringify","error","split","map","index","pageTranslations"],"sources":["/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Blog.js"],"sourcesContent":["import React from 'react';\nimport './index.css';\nimport { useState, useEffect } from 'react'\nimport BookList from './components/BookList';\nimport entryService from './services/entries'\nimport Word from './Word'\nimport axios from 'axios'\n//import { response } from 'express';\n\nconst Blog = (props) => {\n\n  \n  const title = props.title\n  console(\"slug aka title in Blog.js\", title)\n  const exampleBook = require('./exampleBook.json') \n  const [chosenWord, setChosenWord ] = useState('')\n  const [dict, setDict ] = useState(null)\n  const [book, setBook ] = useState(exampleBook)\n  const [boxOnTheRight, setBoxOnTheRight ] = useState('')\n  console.log(boxOnTheRight);\n\n  useEffect(() => {\n    entryService\n    .getBook(title)\n    .then(response => {\n      console.log(\"GetBook succeeded!\");\n      console.log(response);\n      if(response !== '') {\n        console.log(\"response has something\");\n        console.log(\"response.pages\");\n        console.log(\"response.pages[1]\", response.pages[1]);\n        console.log(`response.pages[\"1\"]`, response.pages[\"1\"]);\n        setBook(response)\n      } else {\n      console.log(\"response empty\");\n    }\n    })\n    .catch(err => console.log(\"GetBook failed\"))\n  }, [])\n\n\n  \n\n  const fetchWordDescription = (word) => {\n    entryService\n    .getWord(word)\n    .then(response => {\n      if( response === undefined) {\n        console.log(\"Could not fetch word description using this form of the word\", word)\n      //const endpoint = `http://127.0.0.1:5000/pygetword/${encodeURI(word)}`;\n      const endpoint = `https://langapp23flask.onrender.com/pygetword/${encodeURI(word)}`;\n      console.log(`Sending requests to ${endpoint}`);\n      axios.get(endpoint)\n        .then(response => {\n          //console.log(\"respone: \", response);\n          console.log(\"respone data: \", response.data);\n          const file = response.data[\"word\"];\n          console.log(file); // Sending the file data as the response\n          entryService\n          .getWord(word)\n          .then(response => {\n            console.log(response)\n            setBoxOnTheRight(JSON.stringify(response))\n          })\n        })\n        .catch(err => {\n          console.error('Error occurred again', err);\n        });\n      } else {\n        console.log(\"Response from engine\", response)\n        setBoxOnTheRight(JSON.stringify(response))\n      }\n    })\n    .catch(err => {\n      \nconsole.log(\"caught an error in connecting through entryService\");\n\n    })\n  }\n  return (\n    <div className=\"container\">\n      <BookList />\n      <div className=\"content\">\n        <h1>{book.title}</h1>\n        <p>\n          {book.pages[1].split(\" \")\n          .map(\n            (word, index) => \n            (<Word key = {index} word = {word} base = {book.pageTranslations[1][word]} fetchWordDescription = {fetchWordDescription}/>)\n          )}\n        </p>\n        {/* Add more paragraphs as needed */}\n      </div>\n      <div className=\"box\">\n        <h2>{boxOnTheRight}Box on the right</h2>\n        <p>bb{boxOnTheRight}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;"],"mappings":"6IAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAO,aAAa,CACpB,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAOC,SAAQ,KAAM,uBAAuB,CAC5C,MAAOC,aAAY,KAAM,oBAAoB,CAC7C,MAAOC,KAAI,KAAM,QAAQ,CACzB,MAAOC,MAAK,KAAM,OAAO,CACzB;AAAA,wFAEA,GAAMC,KAAI,CAAG,QAAPA,KAAI,CAAIC,KAAK,CAAK,CAGtB,GAAMC,MAAK,CAAGD,KAAK,CAACC,KAAK,CACzBC,OAAO,CAAC,2BAA2B,CAAED,KAAK,CAAC,CAC3C,GAAME,YAAW,CAAGC,OAAO,CAAC,oBAAoB,CAAC,CACjD,cAAqCX,QAAQ,CAAC,EAAE,CAAC,wCAA1CY,UAAU,eAAEC,aAAa,eAChC,eAAyBb,QAAQ,CAAC,IAAI,CAAC,yCAAhCc,IAAI,eAAEC,OAAO,eACpB,eAAyBf,QAAQ,CAACU,WAAW,CAAC,yCAAvCM,IAAI,eAAEC,OAAO,eACpB,eAA2CjB,QAAQ,CAAC,EAAE,CAAC,yCAAhDkB,aAAa,eAAEC,gBAAgB,eACtCV,OAAO,CAACW,GAAG,CAACF,aAAa,CAAC,CAE1BjB,SAAS,CAAC,UAAM,CACdE,YAAY,CACXkB,OAAO,CAACb,KAAK,CAAC,CACdc,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAChBd,OAAO,CAACW,GAAG,CAAC,oBAAoB,CAAC,CACjCX,OAAO,CAACW,GAAG,CAACG,QAAQ,CAAC,CACrB,GAAGA,QAAQ,GAAK,EAAE,CAAE,CAClBd,OAAO,CAACW,GAAG,CAAC,wBAAwB,CAAC,CACrCX,OAAO,CAACW,GAAG,CAAC,gBAAgB,CAAC,CAC7BX,OAAO,CAACW,GAAG,CAAC,mBAAmB,CAAEG,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CACnDf,OAAO,CAACW,GAAG,yBAAwBG,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CACvDP,OAAO,CAACM,QAAQ,CAAC,CACnB,CAAC,IAAM,CACPd,OAAO,CAACW,GAAG,CAAC,gBAAgB,CAAC,CAC/B,CACA,CAAC,CAAC,CACDK,KAAK,CAAC,SAAAC,GAAG,QAAIjB,QAAO,CAACW,GAAG,CAAC,gBAAgB,CAAC,GAAC,CAC9C,CAAC,CAAE,EAAE,CAAC,CAKN,GAAMO,qBAAoB,CAAG,QAAvBA,qBAAoB,CAAIC,IAAI,CAAK,CACrCzB,YAAY,CACX0B,OAAO,CAACD,IAAI,CAAC,CACbN,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAChB,GAAIA,QAAQ,GAAKO,SAAS,CAAE,CAC1BrB,OAAO,CAACW,GAAG,CAAC,8DAA8D,CAAEQ,IAAI,CAAC,CACnF;AACA,GAAMG,SAAQ,yDAAoDC,SAAS,CAACJ,IAAI,CAAC,CAAE,CACnFnB,OAAO,CAACW,GAAG,+BAAwBW,QAAQ,EAAG,CAC9C1B,KAAK,CAAC4B,GAAG,CAACF,QAAQ,CAAC,CAChBT,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAChB;AACAd,OAAO,CAACW,GAAG,CAAC,gBAAgB,CAAEG,QAAQ,CAACW,IAAI,CAAC,CAC5C,GAAMC,KAAI,CAAGZ,QAAQ,CAACW,IAAI,CAAC,MAAM,CAAC,CAClCzB,OAAO,CAACW,GAAG,CAACe,IAAI,CAAC,CAAE;AACnBhC,YAAY,CACX0B,OAAO,CAACD,IAAI,CAAC,CACbN,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAChBd,OAAO,CAACW,GAAG,CAACG,QAAQ,CAAC,CACrBJ,gBAAgB,CAACiB,IAAI,CAACC,SAAS,CAACd,QAAQ,CAAC,CAAC,CAC5C,CAAC,CAAC,CACJ,CAAC,CAAC,CACDE,KAAK,CAAC,SAAAC,GAAG,CAAI,CACZjB,OAAO,CAAC6B,KAAK,CAAC,sBAAsB,CAAEZ,GAAG,CAAC,CAC5C,CAAC,CAAC,CACJ,CAAC,IAAM,CACLjB,OAAO,CAACW,GAAG,CAAC,sBAAsB,CAAEG,QAAQ,CAAC,CAC7CJ,gBAAgB,CAACiB,IAAI,CAACC,SAAS,CAACd,QAAQ,CAAC,CAAC,CAC5C,CACF,CAAC,CAAC,CACDE,KAAK,CAAC,SAAAC,GAAG,CAAI,CAElBjB,OAAO,CAACW,GAAG,CAAC,oDAAoD,CAAC,CAE7D,CAAC,CAAC,CACJ,CAAC,CACD,mBACE,aAAK,SAAS,CAAC,WAAW,wBACxB,KAAC,QAAQ,IAAG,cACZ,aAAK,SAAS,CAAC,SAAS,wBACtB,oBAAKJ,IAAI,CAACR,KAAK,EAAM,cACrB,mBACGQ,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC,CAACe,KAAK,CAAC,GAAG,CAAC,CACxBC,GAAG,CACF,SAACZ,IAAI,CAAEa,KAAK,qBACX,KAAC,IAAI,EAAe,IAAI,CAAIb,IAAK,CAAC,IAAI,CAAIZ,IAAI,CAAC0B,gBAAgB,CAAC,CAAC,CAAC,CAACd,IAAI,CAAE,CAAC,oBAAoB,CAAID,oBAAqB,EAA1Gc,KAAK,CAAuG,EAAC,CAC5H,EACC,GAEA,cACN,aAAK,SAAS,CAAC,KAAK,wBAClB,sBAAKvB,aAAa,CAAC,kBAAgB,GAAK,cACxC,qBAAG,IAAE,CAACA,aAAa,GAAK,GACpB,GACF,CAEV,CAAC,CAED,cAAeZ,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}