{"ast":null,"code":"import _slicedToArray from\"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import entries from'./services/entries';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FileUpload(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedFile=_useState2[0],setSelectedFile=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),statusOfUpload=_useState4[0],setStatusOfUpload=_useState4[1];var handleFileChange=function handleFileChange(event){setSelectedFile(event.target.files[0]);};var handleMongo=function handleMongo(){entries.getAll().then(function(res){return console.log(\"Response from handle mongo: \",res);}).catch(function(err){return console.log(\"Handle mongo failed: \",err);});};var handleUpload=function handleUpload(){if(selectedFile){var formData=new FormData();formData.append('file',selectedFile);//const endpoint = `http://127.0.0.1:5000/upload`\nvar endpoint=\"https://langapp23flask.onrender.com/upload\";fetch(endpoint,{method:'POST',body:formData}).then(function(response){return response.json();}).then(function(data){console.log(data);// Access the response from Flask\nconsole.log(\"data.message, \",data.message);setStatusOfUpload(data.message);// You can update the React state or perform any other actions based on the response.\n}).catch(function(error){console.error('Error occurred while uploading the file:',error);});}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:statusOfUpload}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,children:\"Upload\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleMongo,children:\"Mongo!\"})]});}export default FileUpload;","map":{"version":3,"names":["React","useState","entries","FileUpload","selectedFile","setSelectedFile","statusOfUpload","setStatusOfUpload","handleFileChange","event","target","files","handleMongo","getAll","then","res","console","log","catch","err","handleUpload","formData","FormData","append","endpoint","fetch","method","body","response","json","data","message","error"],"sources":["/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport entries from './services/entries';\n\nfunction FileUpload() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [statusOfUpload, setStatusOfUpload] = useState('');\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleMongo = () => {\n    entries\n      .getAll()\n      .then(res =>\n        console.log(\"Response from handle mongo: \",res))\n      .catch(err => \n        console.log(\"Handle mongo failed: \",err))\n  }\n\n  const handleUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n\n      //const endpoint = `http://127.0.0.1:5000/upload`\n      const endpoint = `https://langapp23flask.onrender.com/upload`;\n      fetch(endpoint, {\n        method: 'POST',\n        body: formData,\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data); // Access the response from Flask\n        console.log(\"data.message, \", data.message); \n        setStatusOfUpload(data.message)\n        // You can update the React state or perform any other actions based on the response.\n      })\n        .catch((error) => {\n          console.error('Error occurred while uploading the file:', error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <p>{statusOfUpload}</p>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload</button>\n      <button onClick={handleMongo}>Mongo!</button>\n    </div>\n  );\n}\n\nexport default FileUpload;"],"mappings":"6IAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAOC,QAAO,KAAM,oBAAoB,CAAC,wFAEzC,QAASC,WAAU,EAAG,CACpB,cAAwCF,QAAQ,CAAC,IAAI,CAAC,wCAA/CG,YAAY,eAAEC,eAAe,eACpC,eAA4CJ,QAAQ,CAAC,EAAE,CAAC,yCAAjDK,cAAc,eAAEC,iBAAiB,eAExC,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAIC,KAAK,CAAK,CAClCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CACxC,CAAC,CAED,GAAMC,YAAW,CAAG,QAAdA,YAAW,EAAS,CACxBV,OAAO,CACJW,MAAM,EAAE,CACRC,IAAI,CAAC,SAAAC,GAAG,QACPC,QAAO,CAACC,GAAG,CAAC,8BAA8B,CAACF,GAAG,CAAC,GAAC,CACjDG,KAAK,CAAC,SAAAC,GAAG,QACRH,QAAO,CAACC,GAAG,CAAC,uBAAuB,CAACE,GAAG,CAAC,GAAC,CAC/C,CAAC,CAED,GAAMC,aAAY,CAAG,QAAfA,aAAY,EAAS,CACzB,GAAIhB,YAAY,CAAE,CAChB,GAAMiB,SAAQ,CAAG,GAAIC,SAAQ,EAAE,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEnB,YAAY,CAAC,CAErC;AACA,GAAMoB,SAAQ,6CAA+C,CAC7DC,KAAK,CAACD,QAAQ,CAAE,CACdE,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEN,QACR,CAAC,CAAC,CACDP,IAAI,CAAC,SAACc,QAAQ,QAAKA,SAAQ,CAACC,IAAI,EAAE,GAAC,CACnCf,IAAI,CAAC,SAACgB,IAAI,CAAK,CACdd,OAAO,CAACC,GAAG,CAACa,IAAI,CAAC,CAAE;AACnBd,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEa,IAAI,CAACC,OAAO,CAAC,CAC3CxB,iBAAiB,CAACuB,IAAI,CAACC,OAAO,CAAC,CAC/B;AACF,CAAC,CAAC,CACCb,KAAK,CAAC,SAACc,KAAK,CAAK,CAChBhB,OAAO,CAACgB,KAAK,CAAC,0CAA0C,CAAEA,KAAK,CAAC,CAClE,CAAC,CAAC,CACN,CACF,CAAC,CAED,mBACE,oCACE,mBAAI1B,cAAc,EAAK,cACvB,cAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAEE,gBAAiB,EAAG,cACjD,eAAQ,OAAO,CAAEY,YAAa,UAAC,QAAM,EAAS,cAC9C,eAAQ,OAAO,CAAER,WAAY,UAAC,QAAM,EAAS,GACzC,CAEV,CAEA,cAAeT,WAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}