[{"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/index.js":"1","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/App.js":"2","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/TopNavBar.js":"3","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Blog.js":"4","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Notification.js":"5","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Entry.js":"6","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/services/entries.js":"7","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Word.js":"8","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/FileUpload.js":"9"},{"size":153,"mtime":1690362188803,"results":"10","hashOfConfig":"11"},{"size":3385,"mtime":1690380150568,"results":"12","hashOfConfig":"11"},{"size":739,"mtime":1690285380853,"results":"13","hashOfConfig":"11"},{"size":2158,"mtime":1690380546152,"results":"14","hashOfConfig":"11"},{"size":187,"mtime":1674042501000,"results":"15","hashOfConfig":"11"},{"size":243,"mtime":1689715489371,"results":"16","hashOfConfig":"11"},{"size":979,"mtime":1690297844878,"results":"17","hashOfConfig":"11"},{"size":402,"mtime":1690310667462,"results":"18","hashOfConfig":"11"},{"size":1279,"mtime":1690381253252,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uzvvz7",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/index.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/App.js",["50","51","52","53","54","55","56"],[],"import { useState, useEffect } from 'react'\nimport Entry from './components/Entry'\nimport Notification from './components/Notification'\nimport entryService from './services/entries'\nimport Blog from './Blog'\nimport FileUpload from './FileUpload'\nimport TopNavBar from './TopNavBar'\n\n\nconst App = () => {\n  const localDevelopment = process.env.LOCAL_DEVELOPMENT //doesnt work\n  console.log(`Local development: ${localDevelopment}`);\n  const exampleBook = require('./exampleBook.json') \n  console.log(exampleBook);\n  const [entries, setEntries] = useState([\n  {\n      \"name\": \"Arto Hellas\",\n      \"number\": \"040-123456\",\n      \"id\": 1\n    }\n  ])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    entryService\n      .getAll()\n      .then(initialEntries => {\n        console.log(\"MongoDB connection successful\");\n        setEntries(initialEntries)\n      })\n  }, [])\n\n  const addEntry = (event) => {\n    event.preventDefault()\n\n    const entryObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if(entries.find(entry => entry.name === newName)) {\n      console.log(\"Name already in database!\")\n      const entry = entries.find(entry => entry.name === newName)\n      const id = entry.id\n      entryService\n        .update(id, entryObject).then(returnedEntry => {\n          setEntries(entries.map(entry => entry.id !== id ? entry : returnedEntry))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          const error_message = \"400 (Bad request). \" + error.response.data.error\n          setErrorMessage(\n            error_message\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n\n        })\n\n    } else {\n    entryService\n      .create(entryObject)\n        .then(returnedEntry => {\n        setEntries(entries.concat(returnedEntry))\n        setNewName('')\n      })\n      .catch(error => {\n        const error_message = \"400 (Bad request). \" + error.response.data.error\n        setErrorMessage(\n          error_message\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n        \n      \n\n    }\n  \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n    const deleteById = id => { \n      entryService\n        .deleteById(id).then(returnedEntry => { \n          console.log(\"Delete entry of id $ { id } ??\", returnedEntry);\n          setEntries(entries.filter(entry => entry.id !== id))\n        })\n    }\n\n  return (\n    <div>\n    <TopNavBar />\n    <Blog text = {exampleBook}/>\n    <FileUpload />\n    {\n      /*\n      <Notification message={errorMessage} />\n      <ul>\n        <ul>\n          {entries.map(entry => \n            <Entry\n              key={entry.id}\n              entry={entry}\n              deleteById={() => deleteById(entry.id)}\n            />\n          )}\n        </ul>\n      </ul>\n      <form onSubmit={addEntry}>\n        <input placeholder=\"Name\" value={newName} onChange={handleNameChange} />\n        <input placeholder=\"Number\" value={newNumber} onChange={handleNumberChange} />\n        <button type=\"submit\">save</button>\n      </form>\n          */}\n    </div>\n  )\n}\n\nexport default App\n","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/TopNavBar.js",["57","58","59"],[],"import React, { useState, useEffect } from 'react';\nimport './TopNavbar.css';\n\nconst TopNavbar = () => {\n  const [showNavbar, setShowNavbar] = useState(true);\n\n  const handleScroll = () => {\n    const scrollY = window.scrollY;\n    setShowNavbar(scrollY === 0);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <nav className={`top-navbar ${showNavbar ? '' : 'hidden'}`}>\n      <ul>\n        <li><a href=\"#\">Home</a></li>\n        <li><a href=\"#\">About</a></li>\n        <li><a href=\"#\">Contact</a></li>\n        {/* Add more links as needed */}\n      </ul>\n    </nav>\n  );\n};\n\nexport default TopNavbar;\n","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Blog.js",["60","61"],[],"import React from 'react';\nimport './index.css';\nimport { useState } from 'react'\nimport entryService from './services/entries'\nimport Word from './Word'\nimport axios from 'axios'\n\nconst Blog = (props) => {\n  const [chosenWord, setChosenWord ] = useState('')\n  const [boxOnTheRight, setBoxOnTheRight ] = useState('')\n  console.log(boxOnTheRight);\n  const exampleBook = props.text\n  console.log(\"blog\", exampleBook);\n  const fetchWordDescription = (word) => {\n    entryService\n    .getWord(word)\n    .then(response => {\n      if( response === undefined) {\n        console.log(\"Could not fetch word description using this form of the word\", word)\n      //const endpoint = `http://127.0.0.1:5000/pygetword/${encodeURI(word)}`;\n      const endpoint = `https://langapp23flask.onrender.com/pygetword/${encodeURI(word)}`;\n      console.log(`Sending requests to ${endpoint}`);\n      axios.get(endpoint)\n        .then(response => {\n          //console.log(\"respone: \", response);\n          console.log(\"respone data: \", response.data);\n          const file = response.data[\"word\"];\n          console.log(file); // Sending the file data as the response\n          entryService\n          .getWord(word)\n          .then(response => {\n            console.log(response)})\n        })\n        .catch(err => {\n          console.error('Error occurred again', err);\n        });\n      } else {\n        console.log(\"Response from engine\", response)\n        setBoxOnTheRight(JSON.stringify(response))\n      }\n    })\n    .catch(err => {\n      \nconsole.log(\"caught an error in connecting through entryService\");\n\n    })\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <h1>{exampleBook.title}</h1>\n        <p>\n          {exampleBook.pages[\"1\"].split(\" \")\n          .map(\n            (word, index) => \n            (<Word key = {index} word = {word} fetchWordDescription = {fetchWordDescription}/>)\n          )}\n        </p>\n        {/* Add more paragraphs as needed */}\n      </div>\n      <div className=\"box\">\n        <h2>{boxOnTheRight}Box on the right</h2>\n        <p>bb{boxOnTheRight}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Notification.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Entry.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/services/entries.js",[],["62"],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Word.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/FileUpload.js",[],[],{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":13},{"ruleId":"63","severity":1,"message":"67","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":20},{"ruleId":"63","severity":1,"message":"68","line":24,"column":10,"nodeType":"65","messageId":"66","endLine":24,"endColumn":22},{"ruleId":"63","severity":1,"message":"69","line":35,"column":9,"nodeType":"65","messageId":"66","endLine":35,"endColumn":17},{"ruleId":"63","severity":1,"message":"70","line":87,"column":9,"nodeType":"65","messageId":"66","endLine":87,"endColumn":25},{"ruleId":"63","severity":1,"message":"71","line":91,"column":9,"nodeType":"65","messageId":"66","endLine":91,"endColumn":27},{"ruleId":"63","severity":1,"message":"72","line":95,"column":11,"nodeType":"65","messageId":"66","endLine":95,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":22,"column":13,"nodeType":"75","endLine":22,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":23,"column":13,"nodeType":"75","endLine":23,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":24,"column":13,"nodeType":"75","endLine":24,"endColumn":25},{"ruleId":"63","severity":1,"message":"76","line":9,"column":10,"nodeType":"65","messageId":"66","endLine":9,"endColumn":20},{"ruleId":"63","severity":1,"message":"77","line":9,"column":22,"nodeType":"65","messageId":"66","endLine":9,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":32,"column":1,"nodeType":"80","endLine":38,"endColumn":2,"suppressions":"81"},"no-unused-vars","'Entry' is defined but never used.","Identifier","unusedVar","'Notification' is defined but never used.","'errorMessage' is assigned a value but never used.","'addEntry' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","'handleNumberChange' is assigned a value but never used.","'deleteById' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'chosenWord' is assigned a value but never used.","'setChosenWord' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["82"],{"kind":"83","justification":"84"},"directive",""]