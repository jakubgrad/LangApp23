[{"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/index.js":"1","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/App.js":"2","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/TopNavBar.js":"3","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Blog.js":"4","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Notification.js":"5","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Entry.js":"6","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/services/entries.js":"7","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Word.js":"8","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/FileUpload.js":"9","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/BookList.js":"10","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/BookPage.js":"11","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/oldFileUpload.js":"12"},{"size":153,"mtime":1690577262764,"results":"13","hashOfConfig":"14"},{"size":4813,"mtime":1690633288459,"results":"15","hashOfConfig":"14"},{"size":875,"mtime":1690631650599,"results":"16","hashOfConfig":"14"},{"size":4639,"mtime":1690636609075,"results":"17","hashOfConfig":"14"},{"size":187,"mtime":1674042501000,"results":"18","hashOfConfig":"14"},{"size":243,"mtime":1689715489371,"results":"19","hashOfConfig":"14"},{"size":1448,"mtime":1690624984378,"results":"20","hashOfConfig":"14"},{"size":594,"mtime":1690625323492,"results":"21","hashOfConfig":"14"},{"size":5538,"mtime":1690635756948,"results":"22","hashOfConfig":"14"},{"size":894,"mtime":1690630086423,"results":"23","hashOfConfig":"14"},{"size":351,"mtime":1690572013322,"results":"24","hashOfConfig":"14"},{"size":4520,"mtime":1690633043526,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uzvvz7",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/index.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/App.js",["68","69","70","71","72","73","74","75","76","77","78","79","80"],[],"import { useState, useEffect } from 'react'\nimport Entry from './components/Entry'\nimport Notification from './components/Notification'\nimport entryService from './services/entries'\nimport Blog from './Blog'\n//import FileUpload from './FileUpload'\nimport TopNavBar from './TopNavBar'\nimport FileUpload from './FileUpload'\nimport OldFileUpload from './oldFileUpload'\nimport BookList from './components/BookList';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  Outlet,\n  useParams } from 'react-router-dom';\n\nfunction About() {\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>About View</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adip.</p>\n    </div>\n  );\n}\n\nconst Home = () => {\n  console.log(\"Wgat\");\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Home View</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adip.</p>\n    </div>\n  );\n}\n\nfunction Post() {\n  const { slug } = useParams();\n  //const post = BlogPosts[slug];\n  //if(!post) {\n   // return <span>The blog post you've requested doesn't exist.</span>;\n  //}\n  //const { title, description } = post;\n  return (\n    <div style={{ padding: 20 }}>\n      <h3>{slug}</h3>\n      <p>bruh</p>\n    </div>\n  );\n}\n\nconst Main = () => {\n  const { slug } = useParams();\n  console.log(slug);\n//  const localDevelopment = process.env.LOCAL_DEVELOPMENT //doesnt work\n  //console.log(`Local development: ${localDevelopment}`);\n  const exampleBook = require('./exampleBook.json') \n  console.log(exampleBook);\n  const [entries, setEntries] = useState([\n  {\n      \"name\": \"Arto Hellas\",\n      \"number\": \"040-123456\",\n      \"id\": 1\n    }\n  ])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    entryService\n      .getAll()\n      .then(initialEntries => {\n        console.log(\" connection successful\");\n        setEntries(initialEntries)\n      })\n      .catch(err => console.log(\"Couldn't connect\",err))\n  }, [])\n\n  const addEntry = (event) => {\n    event.preventDefault()\n\n    const entryObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if(entries.find(entry => entry.name === newName)) {\n      console.log(\"Name already in database!\")\n      const entry = entries.find(entry => entry.name === newName)\n      const id = entry.id\n      entryService\n        .update(id, entryObject).then(returnedEntry => {\n          setEntries(entries.map(entry => entry.id !== id ? entry : returnedEntry))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          const error_message = \"400 (Bad request). \" + error.response.data.error\n          setErrorMessage(\n            error_message\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n\n        })\n\n    } else {\n    entryService\n      .create(entryObject)\n        .then(returnedEntry => {\n        setEntries(entries.concat(returnedEntry))\n        setNewName('')\n      })\n      .catch(error => {\n        const error_message = \"400 (Bad request). \" + error.response.data.error\n        setErrorMessage(\n          error_message\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n        \n      \n\n    }\n  \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n    const deleteById = id => { \n      entryService\n        .deleteById(id).then(returnedEntry => { \n          console.log(\"Delete entry of id $ { id } ??\", returnedEntry);\n          setEntries(entries.filter(entry => entry.id !== id))\n        })\n    }\n\n  return (\n    \n    <div>\n    \n    <div className=\"main-content\">\n    <TopNavBar />\n    \n    <Blog title = {slug}/>\n    </div>\n    \n    {\n      /*\n      <Notification message={errorMessage} />\n      <ul>\n        <ul>\n          {entries.map(entry => \n            <Entry\n              key={entry.id}\n              entry={entry}\n              deleteById={() => deleteById(entry.id)}\n            />\n          )}\n        </ul>\n      </ul>\n      <form onSubmit={addEntry}>\n        <input placeholder=\"Name\" value={newName} onChange={handleNameChange} />\n        <input placeholder=\"Number\" value={newNumber} onChange={handleNumberChange} />\n        <button type=\"submit\">save</button>\n      </form>\n          */\n         \n    }\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        {/*<Route path=\"/\" element={<Main />} />*/}\n        <Route path=\"frontend/book/:slug\" element={<Main />} />\n        <Route path=\"frontend/about\" element={<About />} />\n        <Route path=\"frontend/upload\" element={<FileUpload />} />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App\n","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/TopNavBar.js",["81","82"],[],"import React, { useState, useEffect } from 'react';\nimport './TopNavbar.css';\n\nconst TopNavbar = () => {\n  \n  const [showNavbar, setShowNavbar] = useState(true);\n/*\n  const handleScroll = () => {\n    const scrollY = window.scrollY;\n    setShowNavbar(scrollY === 0);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n*/\n  return (\n    <nav className={`top-navbar ${showNavbar ? '' : 'hidden'}`}>\n      <ul>\n        <li><a href = {`/frontend/book/HarryPotter`}>Example</a></li>\n        <li><a href = {`/frontend/about`}>About</a></li>\n        <li><a href = {`/frontend/upload`}>Upload</a></li>\n        <li><a href = {`/frontend/contact`}>Contact</a></li>\n        {/* Add more links as needed */}\n      </ul>\n    </nav>\n  );\n};\n\nexport default TopNavbar;\n","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Blog.js",["83","84","85","86","87","88"],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Notification.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Entry.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/services/entries.js",["89"],["90"],"import axios from 'axios'\nimport { mongo } from 'mongoose'\n//import BookList from '../components/BookList'\nconst baseUrl = '/api/blogs'\n//langApp\nconst getWord = (word) => {\n  const wo = word.toLowerCase().slice(0, 2)\n  const request = axios.get(`/api/blogs/letters/${wo}/${word.toLowerCase()}`)\n  return request.then(response => response.data).catch(err => console.log(\"Could not get the word in the given form\", err))\n}\n\n//old\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getBookList = () => {\n  const request = axios.get(`${baseUrl}/booklist`)\n  return request.then(response => response.data)\n}\n\nconst getBook = (title) => {\n  console.log(\"getBook says: making request to \");\n  const request = axios.get(`${baseUrl}/book/${title}`)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(`${baseUrl}/mongonew`, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteById = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { \n  getAll, \n  create, \n  update,\n  deleteById,\n  getWord,\n  getBookList,\n  getBook\n}","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Word.js",["91"],[],"const Word = (props) => {\n    const base = props.base === undefined\n    ? \"mennä\" //a word for when base is absent\n    : props.base\n    //console.log(\"base: \", base);\n    const word = props.word\n    const fetchWordDescription = props.fetchWordDescription\n    return <span onClick={() => \n        fetchWordDescription(\n            word    //this was, and in most cases should be, word!\n            .replaceAll(\".\",\"\")\n            .replaceAll(\",\",\"\")\n            .replaceAll(\"(\",\"\")\n            .replaceAll(\")\",\"\")\n            .replaceAll(\"-\",\"\")\n        )}>{word} </span>\n}\nexport default Word;","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/FileUpload.js",["92","93","94"],[],"import React, { useState, useEffect } from 'react';\nimport entries from './services/entries';\nimport styles from './FileUpload.module.css';\n\n\nfunction FileUpload() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [statusOfUpload, setStatusOfUpload] = useState('');\n  const [newAuthor, setNewAuthor] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n\n  useEffect(() => {\n    // This effect will run when the statusOfUpload changes\n    if (statusOfUpload === 'Uploading to flask server...' || statusOfUpload === 'Uploading to flask server..' || statusOfUpload === 'Uploading to flask server.' || statusOfUpload === 'Uploading to flask server') {\n      // Start a timer to update the status message every second\n      const timer = setInterval(() => {\n        setStatusOfUpload((prevStatus) => {\n          if (prevStatus.endsWith('...')) {\n            return 'Uploading to flask server';\n          }\n          return prevStatus + '.';\n        });\n      }, 1000);\n\n      // Clear the timer when the status changes to something else\n      return () => clearInterval(timer);\n    }\n  }, [statusOfUpload]);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleMongo = () => {\n    const text = {\n      \"title\":\"Mongoid\",\n      \"author\":\"fellow kid\",\n      \"pages\": {\n        \"1\":\"Hansin tavallinen päivä. aakkosellisuus Aakko Herään arkisin aina kello 7. Pidän rauhallisista aamuista, joten herään yleensä ajoissa. Viikonloppuisin saatan nukkua hieman pidempään. Aamulla teen aamupalaa ja keitän kahvin. Aamupalaa syön lukiessa päivän lehteä. Yleensä syön kaurapuuroa lisukkeilla, mutta joskus saatan tehdä voileivän tai syödä jugurttia myslillä.Sitten vaihdan vaatteet ja valmistaudun työpäivään. Työpäivä alkaa kello 9, joten lähden kotoa aina kello 8:30. Menen töihin linja-autolla. Aamuisin on yleensä ruuhkaa ja bussi on melkein aina täynnä. Joskus olen töissä vasta kello 9:10. Päivällä käyn työkavereiden kanssa lounaalla ravintolassa. Olen töissä kello 17 asti. Onneksi en jää koskaan ylitöihin. Töiden jälkeen hoidan usein keskustassa asioita, käyn kaupassa tai tapaan ystäviä. Sitten menen kotiin. Joskus käyn illalla kuntosalilla, katson televisiota tai luen kirjaa. Joskus teen vähän töitä kotona illalla. Joko minä tai tyttöystäväni tekee illallisen - yleensä vuorottelemme. Illalla katsomme aina kymmenen uutiset ja sen jälkeen aloitamme iltapuuhat ja menemme nukkumaan.\"  \n    },\n    \"pageTranslations\": {\n        \"1\":{\n            \"Hansin\":\"Hansi\",\n            \"tavallinen\":\"tavallinen\",\n            \"päivä\":\"päivä\"\n        }\n    }\n    }\n    entries\n      .create(text)\n      .then(res =>\n        console.log(\"Response from handle mongo: \",res))\n      .catch(err => \n        console.log(\"Handle mongo failed: \",err))\n  }\n\n  const handleUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      if (newAuthor == '' || newTitle == '') {\n        return\n      }\n      setStatusOfUpload('Uploading to flask server...');\n      //const endpoint = `http://127.0.0.1:5000/upload`\n      const endpoint = `https://langapp23flask.onrender.com/upload`;\n      fetch(endpoint, {\n        method: 'POST',\n        body: formData,\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        setStatusOfUpload('Upload completed successfully!');\n        console.log(data); // Access the response from Flask\n        console.log(\"data.message, \", data.message); \n        console.log(\"data.dict, \", data.dict); \n        console.log(\"data.text, \", data.text); \n        setStatusOfUpload(data.message)\n        const text = {\n          \"title\":newTitle,\n          \"author\":newAuthor,\n          \"pages\": {\n            \"1\":data.text  \n        },\n        \"pageTranslations\": {\n            \"1\":data.dict\n        }\n      }\n        entries\n          .create(text)\n          .then(res =>\n            console.log(\"Response from handle mongo: \",res))\n          .catch(err => \n            console.log(\"Handle mongo failed: \",err))\n        \n        // You can update the React state or perform any other actions based on the response.\n      })\n        .catch((error) => {\n          setStatusOfUpload('Upload failed! File took too long to process ( >90 seconds )')\n          console.error('Error occurred while uploading the file:', error);\n        });\n    }\n  };\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value);\n  };\n\n  return (\n    <div className={styles.container}>\n      <p className={statusOfUpload === \"\" ? \"\" : styles.status}>{\n      statusOfUpload\n      }</p>\n      <div className={styles['input-group']}>\n        <input type=\"file\" onChange={handleFileChange} />\n      </div>\n      <div className={styles['input-group']}>\n        <input\n          onChange={handleAuthorChange}\n          type=\"text\"\n          placeholder=\"Author. Don't use spaces! Sorry...\"\n          value={newAuthor}\n        />\n        <input\n          onChange={handleTitleChange}\n          type=\"text\"\n          placeholder=\"Title, also with no spaces :o\"\n          value={newTitle}\n        />\n      </div>\n      <div className={styles['input-group']}>\n        <button onClick={handleUpload}>Upload</button>\n        {/*<button onClick={handleMongo}>Mongo!</button>*/}\n      </div>\n    </div>\n  );\n}\n\nexport default FileUpload;","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/BookList.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/BookPage.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/oldFileUpload.js",["95","96"],[],"import React, { useState } from 'react';\nimport entries from './services/entries';\n\nfunction FileUpload() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [statusOfUpload, setStatusOfUpload] = useState('');\n  const [newAuthor, setNewAuthor] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleMongo = () => {\n    const text = {\n      \"title\":\"Mongoid\",\n      \"author\":\"fellow kid\",\n      \"pages\": {\n        \"1\":\"Hansin tavallinen päivä. aakkosellisuus Aakko Herään arkisin aina kello 7. Pidän rauhallisista aamuista, joten herään yleensä ajoissa. Viikonloppuisin saatan nukkua hieman pidempään. Aamulla teen aamupalaa ja keitän kahvin. Aamupalaa syön lukiessa päivän lehteä. Yleensä syön kaurapuuroa lisukkeilla, mutta joskus saatan tehdä voileivän tai syödä jugurttia myslillä.Sitten vaihdan vaatteet ja valmistaudun työpäivään. Työpäivä alkaa kello 9, joten lähden kotoa aina kello 8:30. Menen töihin linja-autolla. Aamuisin on yleensä ruuhkaa ja bussi on melkein aina täynnä. Joskus olen töissä vasta kello 9:10. Päivällä käyn työkavereiden kanssa lounaalla ravintolassa. Olen töissä kello 17 asti. Onneksi en jää koskaan ylitöihin. Töiden jälkeen hoidan usein keskustassa asioita, käyn kaupassa tai tapaan ystäviä. Sitten menen kotiin. Joskus käyn illalla kuntosalilla, katson televisiota tai luen kirjaa. Joskus teen vähän töitä kotona illalla. Joko minä tai tyttöystäväni tekee illallisen - yleensä vuorottelemme. Illalla katsomme aina kymmenen uutiset ja sen jälkeen aloitamme iltapuuhat ja menemme nukkumaan.\"  \n    },\n    \"pageTranslations\": {\n        \"1\":{\n            \"Hansin\":\"Hansi\",\n            \"tavallinen\":\"tavallinen\",\n            \"päivä\":\"päivä\"\n        }\n    }\n    }\n    entries\n      .create(text)\n      .then(res =>\n        console.log(\"Response from handle mongo: \",res))\n      .catch(err => \n        console.log(\"Handle mongo failed: \",err))\n  }\n\n  const handleUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      if (newAuthor == '' || newTitle == '') {\n        return\n      }\n      //const endpoint = `http://127.0.0.1:5000/upload`\n      const endpoint = `https://langapp23flask.onrender.com/upload`;\n      fetch(endpoint, {\n        method: 'POST',\n        body: formData,\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data); // Access the response from Flask\n        console.log(\"data.message, \", data.message); \n        console.log(\"data.dict, \", data.dict); \n        console.log(\"data.text, \", data.text); \n        setStatusOfUpload(data.message)\n        const text = {\n          \"title\":newTitle,\n          \"author\":newAuthor,\n          \"pages\": {\n            \"1\":data.text  \n        },\n        \"pageTranslations\": {\n            \"1\":data.dict\n        }\n      }\n        entries\n          .create(text)\n          .then(res =>\n            console.log(\"Response from handle mongo: \",res))\n          .catch(err => \n            console.log(\"Handle mongo failed: \",err))\n        \n        // You can update the React state or perform any other actions based on the response.\n      })\n        .catch((error) => {\n          console.error('Error occurred while uploading the file:', error);\n        });\n    }\n  };\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  return (\n    <div>\n      <p>{statusOfUpload}</p>\n      <div className=\"input-group\">\n        <label htmlFor=\"author\">Author:</label>\n        <input\n          id=\"author\"\n          onChange={handleAuthorChange}\n          type=\"text\"\n          placeholder=\"Don't use spaces! Sorry...\"\n          value={newAuthor}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          id=\"title\"\n          onChange={handleTitleChange}\n          type=\"text\"\n          placeholder=\"Some pretty long placeholder...\"\n          value={newTitle}\n        />\n      </div>\n      <div className=\"input-group\">\n        <input type=\"file\" id=\"file\" onChange={handleFileChange} />\n      </div>\n      <button onClick={handleUpload}>Upload</button>\n      <button onClick={handleMongo}>Mongo!</button>\n    </div>\n  );\n}\n\nexport default FileUpload;",{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"101","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":20},{"ruleId":"97","severity":1,"message":"102","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":21},{"ruleId":"97","severity":1,"message":"103","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":16},{"ruleId":"97","severity":1,"message":"104","line":16,"column":3,"nodeType":"99","messageId":"100","endLine":16,"endColumn":7},{"ruleId":"97","severity":1,"message":"105","line":17,"column":3,"nodeType":"99","messageId":"100","endLine":17,"endColumn":9},{"ruleId":"97","severity":1,"message":"106","line":29,"column":7,"nodeType":"99","messageId":"100","endLine":29,"endColumn":11},{"ruleId":"97","severity":1,"message":"107","line":39,"column":10,"nodeType":"99","messageId":"100","endLine":39,"endColumn":14},{"ruleId":"97","severity":1,"message":"108","line":70,"column":10,"nodeType":"99","messageId":"100","endLine":70,"endColumn":22},{"ruleId":"97","severity":1,"message":"109","line":82,"column":9,"nodeType":"99","messageId":"100","endLine":82,"endColumn":17},{"ruleId":"97","severity":1,"message":"110","line":134,"column":9,"nodeType":"99","messageId":"100","endLine":134,"endColumn":25},{"ruleId":"97","severity":1,"message":"111","line":138,"column":9,"nodeType":"99","messageId":"100","endLine":138,"endColumn":27},{"ruleId":"97","severity":1,"message":"112","line":142,"column":11,"nodeType":"99","messageId":"100","endLine":142,"endColumn":21},{"ruleId":"97","severity":1,"message":"113","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"114","line":6,"column":22,"nodeType":"99","messageId":"100","endLine":6,"endColumn":35},{"ruleId":"97","severity":1,"message":"115","line":64,"column":10,"nodeType":"99","messageId":"100","endLine":64,"endColumn":20},{"ruleId":"97","severity":1,"message":"116","line":64,"column":22,"nodeType":"99","messageId":"100","endLine":64,"endColumn":35},{"ruleId":"97","severity":1,"message":"117","line":66,"column":10,"nodeType":"99","messageId":"100","endLine":66,"endColumn":14},{"ruleId":"97","severity":1,"message":"118","line":66,"column":16,"nodeType":"99","messageId":"100","endLine":66,"endColumn":23},{"ruleId":"97","severity":1,"message":"119","line":68,"column":10,"nodeType":"99","messageId":"100","endLine":68,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":88,"column":6,"nodeType":"122","endLine":88,"endColumn":8,"suggestions":"123"},{"ruleId":"97","severity":1,"message":"124","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":45,"column":1,"nodeType":"127","endLine":53,"endColumn":2,"suppressions":"128"},{"ruleId":"97","severity":1,"message":"129","line":2,"column":11,"nodeType":"99","messageId":"100","endLine":2,"endColumn":15},{"ruleId":"97","severity":1,"message":"130","line":34,"column":9,"nodeType":"99","messageId":"100","endLine":34,"endColumn":20},{"ruleId":"131","severity":1,"message":"132","line":61,"column":21,"nodeType":"133","messageId":"134","endLine":61,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":61,"column":39,"nodeType":"133","messageId":"134","endLine":61,"endColumn":41},{"ruleId":"131","severity":1,"message":"132","line":41,"column":21,"nodeType":"133","messageId":"134","endLine":41,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":41,"column":39,"nodeType":"133","messageId":"134","endLine":41,"endColumn":41},"no-unused-vars","'Entry' is defined but never used.","Identifier","unusedVar","'Notification' is defined but never used.","'OldFileUpload' is defined but never used.","'BookList' is defined but never used.","'Link' is defined but never used.","'Outlet' is defined but never used.","'Home' is assigned a value but never used.","'Post' is defined but never used.","'errorMessage' is assigned a value but never used.","'addEntry' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","'handleNumberChange' is assigned a value but never used.","'deleteById' is assigned a value but never used.","'useEffect' is defined but never used.","'setShowNavbar' is assigned a value but never used.","'chosenWord' is assigned a value but never used.","'setChosenWord' is assigned a value but never used.","'dict' is assigned a value but never used.","'setDict' is assigned a value but never used.","'boxOnTheRight' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'mongo' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["136"],"'base' is assigned a value but never used.","'handleMongo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"137","fix":"138"},{"kind":"139","justification":"140"},"Update the dependencies array to be: [title]",{"range":"141","text":"142"},"directive","",[2511,2513],"[title]"]