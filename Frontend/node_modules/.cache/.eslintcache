[{"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/index.js":"1","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/App.js":"2","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Blog.js":"3","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Notification.js":"4","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Entry.js":"5","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/services/entries.js":"6","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Word.js":"7","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/FileUpload.js":"8","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/BookList.js":"9","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/BookPage.js":"10","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/oldFileUpload.js":"11","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/About.js":"12","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/TopNavBar.js":"13","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Contact.js":"14"},{"size":153,"mtime":1690577262764,"results":"15","hashOfConfig":"16"},{"size":1037,"mtime":1690648770804,"results":"17","hashOfConfig":"16"},{"size":4686,"mtime":1690649375347,"results":"18","hashOfConfig":"16"},{"size":187,"mtime":1674042501000,"results":"19","hashOfConfig":"16"},{"size":243,"mtime":1689715489371,"results":"20","hashOfConfig":"16"},{"size":1201,"mtime":1690649880174,"results":"21","hashOfConfig":"16"},{"size":1306,"mtime":1690639886451,"results":"22","hashOfConfig":"16"},{"size":4014,"mtime":1690649893811,"results":"23","hashOfConfig":"16"},{"size":970,"mtime":1690647636610,"results":"24","hashOfConfig":"16"},{"size":351,"mtime":1690572013322,"results":"25","hashOfConfig":"16"},{"size":4520,"mtime":1690633043526,"results":"26","hashOfConfig":"16"},{"size":1574,"mtime":1690648176937,"results":"27","hashOfConfig":"16"},{"size":497,"mtime":1690650412006,"results":"28","hashOfConfig":"16"},{"size":949,"mtime":1690649357398,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uzvvz7",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/index.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/App.js",["78"],[],"import Blog from './Blog'\n//import FileUpload from './FileUpload'\nimport TopNavBar from './components/TopNavBar'\nimport FileUpload from './FileUpload'\nimport About from './components/About'\nimport Contact from './components/Contact'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useParams } from 'react-router-dom';\n\nconst MainPage = () => {\n  const { slug } = useParams(); //slug is part of URL after frontend/book/\n  const exampleBook = require('./exampleBook.json') \n\n  return (\n    <div>\n    <div className=\"main-content\">\n    <TopNavBar />\n    <Blog title = {slug}/>\n    </div>\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        {/*<Route path=\"/\" element={<Main />} />*/}\n        <Route path=\"frontend/book/:slug\" element={<MainPage />} />\n        <Route path=\"frontend/about\" element={<About />} />\n        <Route path=\"frontend/upload\" element={<FileUpload />} />\n        <Route path=\"frontend/contact\" element={<Contact />} />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App\n","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Blog.js",["79"],["80"],"import React from 'react';\nimport './index.css';\nimport { useState, useEffect } from 'react'\nimport BookList from './components/BookList';\nimport entryService from './services/entries'\nimport Word from './Word'\nimport axios from 'axios'\n//import { response } from 'express';\n\nconst ComponentWithDescription = (props) => {\n  console.log(`props.data: ${!props.data}`)\n  const data = props.data\n  console.log(`data: ${data}`);\n  if (data === \"start_value\") {\n    return <div>Description of the word will appear here!</div>;\n  }\n  if (!data || !data.senses || data.senses.length === 0) {\n    // Handle the case when data or senses array is empty or undefined\n    return <div>No valid data available for this word.</div>;\n  }\n\n  const { senses } = data;\n\n  return (\n    <div>\n      <h2>{data.word.toUpperCase()}</h2>\n      <h3>Meanings:</h3>\n      {senses.map((sense, index) => (\n        <div key={index}>\n          {sense.glosses && sense.glosses.length > 0 ? (\n            <ul>\n              {sense.glosses.map((gloss, index) => (\n                <li key={index}>{gloss}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>No meanings available.</p>\n          )}\n        </div>\n      ))}\n\n\n{data.synonyms && data.synonyms.length > 0 ? (\n  <>\n  <h3>Synonyms:</h3>\n  <ul>\n    {data.synonyms.map((synonym, index) => (\n      <li key={index}>{synonym.word}</li>\n    ))}\n  </ul></>\n) : (\n  <p>{/*No synonyms available.*/}</p>\n)}\n    </div>\n  );\n};\n\nconst Blog = (props) => { //Blog is called from App.js\n  const title = props.title //title of wanted book\n  console.log(\"slug aka title in Blog.js\", title)\n  const exampleBook = require('./exampleBook.json') \n  const [description, setDescription ] = useState('start_value')\n  const [book, setBook ] = useState(exampleBook)\n  // eslint-disable-next-line no-unused-vars\n  const [clicked, setClicked ] = useState('') //for making the box on the right highlighted when a word is clicked\n\n  useEffect(() => {\n    entryService\n    .getBook(title)\n    .then(response => {\n      console.log(\"GetBook succeeded!\");\n      console.log(response);\n      if(response !== '') {\n        console.log(\"response has something\");\n        console.log(\"response.pages\");\n        console.log(\"response.pages[1]\", response.pages[1]);\n        console.log(`response.pages[\"1\"]`, response.pages[\"1\"]);\n        console.log(`response.pageTranslations[\"1\"]`, response.pageTranslations[\"1\"]);\n        setBook(response)\n      } else {\n      console.log(\"response empty\");\n    }\n    })\n    .catch(err => console.log(\"GetBook failed\"))\n  }, [])\n\n\n  \n\n  const fetchWordDescription = (word2) => {\n    setClicked(true);\n\n    // Reset the clicked style after 1 second\n    setTimeout(() => {\n      setClicked(false);\n    }, 1000);\n    \n    console.log(\"fetchWordDescription word2: \", word2);\n    const word = book.pageTranslations[1][word2]\n    console.log(\"fetchWordDescription word: \", word);\n    console.log(word)\n    entryService\n    .getWord(word)\n    .then(response => {\n      if( response === undefined) {\n        console.log(\"Could not fetch word description using this form of the word\", word)\n      //const endpoint = `http://127.0.0.1:5000/pygetword/${encodeURI(word)}`;\n      const endpoint = `https://langapp23flask.onrender.com/pygetword/${encodeURI(word)}`;\n      console.log(`Sending requests to ${endpoint}`);\n      axios.get(endpoint)\n        .then(response => {\n          //console.log(\"respone: \", response);\n          console.log(\"respone data: \", response.data);\n          const file = response.data[\"word\"];\n          console.log(file); // Sending the file data as the response\n          entryService\n          .getWord(word)\n          .then(response => {\n            console.log(response)\n            setDescription(response)\n          })\n        })\n        .catch(err => {\n          console.error('Error occurred again', err);\n        });\n      } else {\n        console.log(\"Response from engine\", response)\n        setDescription(response)\n      }\n    })\n    .catch(err => {\n      \nconsole.log(\"caught an error in connecting through entryService\");\n\n    })\n  }\n  return (\n    <div className=\"container\">\n      <BookList />\n      <div className=\"content\">\n        <h1>{book.title}</h1>\n        <p>\n          {book.pages[1].split(\" \")\n          .map(\n            (word, index) => \n            (<Word key = {index} word = {word} base = {book.pageTranslations[1][word]} fetchWordDescription = {fetchWordDescription}/>)\n          )}\n        </p>\n        {/* Add more paragraphs as needed */}\n      </div>\n      <div className=\"box\">\n        <ComponentWithDescription data = {description} />\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Notification.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Entry.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/services/entries.js",[],["81"],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Word.js",["82"],[],"import React, { useState } from \"react\";\n\nconst Word = (props) => {\n  const base =\n    props.base === undefined\n      ? \"mennä\" //a word for when base is absent\n      : props.base;\n\n  const word = props.word;\n  const fetchWordDescription = props.fetchWordDescription;\n\n  const [clicked, setClicked] = useState(false);\n\n  const handleClick = () => {\n    // Call your fetchWordDescription function here\n    fetchWordDescription(\n      word\n        .replaceAll(\".\", \"\")\n        .replaceAll(\",\", \"\")\n        .replaceAll(\"(\", \"\")\n        .replaceAll(\")\", \"\")\n        .replaceAll(\"-\", \"\")\n    );\n\n    // Update state to enable the clicked style\n    setClicked(true);\n\n    // Reset the clicked style after 1 second\n    setTimeout(() => {\n      setClicked(false);\n    }, 1000);\n  };\n\n  // Define the style based on whether it was clicked or not\n  const style = {\n    backgroundColor: clicked ? \"lightblue\" : \"transparent\",\n    borderRadius: \"5px\",\n    transition: \"background-color 1s\",\n    cursor: \"pointer\",\n  };\n\n  // Define the box-shadow style to create the highlighted effect\n  const boxShadowStyle = {\n    boxShadow: clicked ? \"0 0 5px lightblue\" : \"none\",\n  };\n\n  return (\n    <span onClick={handleClick} style={{ ...style, ...boxShadowStyle }}>\n      {word}{\" \"}\n    </span>\n  );\n};\n\nexport default Word;","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/FileUpload.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/BookList.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/BookPage.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/oldFileUpload.js",["83","84"],[],"import React, { useState } from 'react';\nimport entries from './services/entries';\n\nfunction FileUpload() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [statusOfUpload, setStatusOfUpload] = useState('');\n  const [newAuthor, setNewAuthor] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleMongo = () => {\n    const text = {\n      \"title\":\"Mongoid\",\n      \"author\":\"fellow kid\",\n      \"pages\": {\n        \"1\":\"Hansin tavallinen päivä. aakkosellisuus Aakko Herään arkisin aina kello 7. Pidän rauhallisista aamuista, joten herään yleensä ajoissa. Viikonloppuisin saatan nukkua hieman pidempään. Aamulla teen aamupalaa ja keitän kahvin. Aamupalaa syön lukiessa päivän lehteä. Yleensä syön kaurapuuroa lisukkeilla, mutta joskus saatan tehdä voileivän tai syödä jugurttia myslillä.Sitten vaihdan vaatteet ja valmistaudun työpäivään. Työpäivä alkaa kello 9, joten lähden kotoa aina kello 8:30. Menen töihin linja-autolla. Aamuisin on yleensä ruuhkaa ja bussi on melkein aina täynnä. Joskus olen töissä vasta kello 9:10. Päivällä käyn työkavereiden kanssa lounaalla ravintolassa. Olen töissä kello 17 asti. Onneksi en jää koskaan ylitöihin. Töiden jälkeen hoidan usein keskustassa asioita, käyn kaupassa tai tapaan ystäviä. Sitten menen kotiin. Joskus käyn illalla kuntosalilla, katson televisiota tai luen kirjaa. Joskus teen vähän töitä kotona illalla. Joko minä tai tyttöystäväni tekee illallisen - yleensä vuorottelemme. Illalla katsomme aina kymmenen uutiset ja sen jälkeen aloitamme iltapuuhat ja menemme nukkumaan.\"  \n    },\n    \"pageTranslations\": {\n        \"1\":{\n            \"Hansin\":\"Hansi\",\n            \"tavallinen\":\"tavallinen\",\n            \"päivä\":\"päivä\"\n        }\n    }\n    }\n    entries\n      .create(text)\n      .then(res =>\n        console.log(\"Response from handle mongo: \",res))\n      .catch(err => \n        console.log(\"Handle mongo failed: \",err))\n  }\n\n  const handleUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      if (newAuthor == '' || newTitle == '') {\n        return\n      }\n      //const endpoint = `http://127.0.0.1:5000/upload`\n      const endpoint = `https://langapp23flask.onrender.com/upload`;\n      fetch(endpoint, {\n        method: 'POST',\n        body: formData,\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data); // Access the response from Flask\n        console.log(\"data.message, \", data.message); \n        console.log(\"data.dict, \", data.dict); \n        console.log(\"data.text, \", data.text); \n        setStatusOfUpload(data.message)\n        const text = {\n          \"title\":newTitle,\n          \"author\":newAuthor,\n          \"pages\": {\n            \"1\":data.text  \n        },\n        \"pageTranslations\": {\n            \"1\":data.dict\n        }\n      }\n        entries\n          .create(text)\n          .then(res =>\n            console.log(\"Response from handle mongo: \",res))\n          .catch(err => \n            console.log(\"Handle mongo failed: \",err))\n        \n        // You can update the React state or perform any other actions based on the response.\n      })\n        .catch((error) => {\n          console.error('Error occurred while uploading the file:', error);\n        });\n    }\n  };\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n\n  const handleAuthorChange = (event) => {\n    setNewAuthor(event.target.value)\n  }\n\n  return (\n    <div>\n      <p>{statusOfUpload}</p>\n      <div className=\"input-group\">\n        <label htmlFor=\"author\">Author:</label>\n        <input\n          id=\"author\"\n          onChange={handleAuthorChange}\n          type=\"text\"\n          placeholder=\"Don't use spaces! Sorry...\"\n          value={newAuthor}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          id=\"title\"\n          onChange={handleTitleChange}\n          type=\"text\"\n          placeholder=\"Some pretty long placeholder...\"\n          value={newTitle}\n        />\n      </div>\n      <div className=\"input-group\">\n        <input type=\"file\" id=\"file\" onChange={handleFileChange} />\n      </div>\n      <button onClick={handleUpload}>Upload</button>\n      <button onClick={handleMongo}>Mongo!</button>\n    </div>\n  );\n}\n\nexport default FileUpload;","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/About.js",["85"],[],"import TopNavBar from \"./TopNavBar\";\n\nfunction About() {\n    return (\n      <div>\n        <TopNavBar />\n        <div style={{ padding: 20 }}>\n          <h2>About</h2>\n          <p>\n            Welcome to my website!\n            This website provides a unique feature that allows you to upload a PDF file and \n            read it online. But that's not all! There's an extra touch of magic to enhance \n            your reading experience.\n          </p>\n          <p>\n            When you view the PDF on our website, you can click on any word in the document, \n            and a translation and description of that word will magically appear in the box right next \n            to it! This is thanks to a powerful mage, the Wiktionary database that provides the website with \n            instant definitions and insights.\n          </p>\n          <p>\n            This is a very early stage of the website and perhaps only a proof of concept. Nevertheless,\n            it is possible to upload a pdf file and then see it on the \"book shelf\" on the left side of the page\n            (just remember to refresh!)\n          </p>\n          <p>\n          <a className=\"githublink\" target=\"_blank\" style={{ color: \"blue\"}} href = \"https://github.com/jakubgrad/LangApp23\">The whole code of the website is publicly available on Github.</a> For questions or suggestions, please don't hesitate to \n            contact me via the \"Contact\" link in the navigation bar. <br></br>Happy reading!<br></br>Jakub Grad\n          </p>\n        </div>\n      </div>\n    );\n  }\n  export default About;","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/TopNavBar.js",["86"],[],"import React, { useState } from 'react';\nimport './TopNavbar.css';\n\nconst TopNavbar = () => {\n  \n  return (\n    <nav className={`top-navbar`}>\n      <ul>\n        <li><a href = {`/frontend/book/HarryPotter`}>Main</a></li>\n        <li><a href = {`/frontend/about`}>About</a></li>\n        <li><a href = {`/frontend/upload`}>Upload</a></li>\n        <li><a href = {`/frontend/contact`}>Contact</a></li>\n        {/* Add more links as needed */}\n      </ul>\n    </nav>\n  );\n};\n\nexport default TopNavbar;\n","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Contact.js",[],["87","88","89"],{"ruleId":"90","severity":1,"message":"91","line":15,"column":9,"nodeType":"92","messageId":"93","endLine":15,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":85,"column":6,"nodeType":"96","endLine":85,"endColumn":8,"suggestions":"97"},{"ruleId":"90","severity":1,"message":"98","line":65,"column":10,"nodeType":"92","messageId":"93","endLine":65,"endColumn":17,"suppressions":"99"},{"ruleId":"100","severity":1,"message":"101","line":35,"column":1,"nodeType":"102","endLine":41,"endColumn":2,"suppressions":"103"},{"ruleId":"90","severity":1,"message":"104","line":4,"column":9,"nodeType":"92","messageId":"93","endLine":4,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":41,"column":21,"nodeType":"107","messageId":"108","endLine":41,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":41,"column":39,"nodeType":"107","messageId":"108","endLine":41,"endColumn":41},{"ruleId":"109","severity":1,"message":"110","line":27,"column":11,"nodeType":"111","messageId":"112","endLine":27,"endColumn":126,"fix":"113"},{"ruleId":"90","severity":1,"message":"114","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":11,"column":11,"nodeType":"111","messageId":"112","endLine":11,"endColumn":114,"fix":"115","suppressions":"116"},{"ruleId":"109","severity":1,"message":"110","line":15,"column":13,"nodeType":"111","messageId":"112","endLine":15,"endColumn":137,"fix":"117","suppressions":"118"},{"ruleId":"109","severity":1,"message":"110","line":19,"column":13,"nodeType":"111","messageId":"112","endLine":19,"endColumn":116,"fix":"119","suppressions":"120"},"no-unused-vars","'exampleBook' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'clicked' is assigned a value but never used.",["122"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["123"],"'base' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"124","text":"125"},"'useState' is defined but never used.",{"range":"126","text":"125"},["127"],{"range":"128","text":"125"},["129"],{"range":"130","text":"125"},["131"],{"desc":"132","fix":"133"},{"kind":"134","justification":"135"},{"kind":"134","justification":"135"},[1261,1261]," rel=\"noreferrer\"",[366,366],{"kind":"134","justification":"135"},[628,628],{"kind":"134","justification":"135"},[857,857],{"kind":"134","justification":"135"},"Update the dependencies array to be: [title]",{"range":"136","text":"137"},"directive","",[2567,2569],"[title]"]