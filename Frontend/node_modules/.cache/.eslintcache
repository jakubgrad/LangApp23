[{"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/index.js":"1","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/App.js":"2","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/TopNavBar.js":"3","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Blog.js":"4","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Notification.js":"5","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Entry.js":"6","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/services/entries.js":"7","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Word.js":"8"},{"size":153,"mtime":1674042501000,"results":"9","hashOfConfig":"10"},{"size":3205,"mtime":1690288509571,"results":"11","hashOfConfig":"10"},{"size":739,"mtime":1690285380853,"results":"12","hashOfConfig":"10"},{"size":1861,"mtime":1690309807330,"results":"13","hashOfConfig":"10"},{"size":187,"mtime":1674042501000,"results":"14","hashOfConfig":"10"},{"size":243,"mtime":1689715489371,"results":"15","hashOfConfig":"10"},{"size":979,"mtime":1690297844878,"results":"16","hashOfConfig":"10"},{"size":402,"mtime":1690310667462,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uzvvz7",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/index.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/App.js",["45","46","47","48","49","50","51"],[],"import { useState, useEffect } from 'react'\nimport Entry from './components/Entry'\nimport Notification from './components/Notification'\nimport entryService from './services/entries'\nimport Blog from './Blog'\nimport TopNavBar from './TopNavBar'\n\n\nconst App = () => {\n  const exampleBook = require('./exampleBook.json') \n  console.log(exampleBook);\n  const [entries, setEntries] = useState([\n  {\n      \"name\": \"Arto Hellas\",\n      \"number\": \"040-123456\",\n      \"id\": 1\n    }\n  ])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    entryService\n      .getAll()\n      .then(initialEntries => {\n        console.log(\"MongoDB connection successful\");\n        setEntries(initialEntries)\n      })\n  }, [])\n\n  const addEntry = (event) => {\n    event.preventDefault()\n\n    const entryObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if(entries.find(entry => entry.name === newName)) {\n      console.log(\"Name already in database!\")\n      const entry = entries.find(entry => entry.name === newName)\n      const id = entry.id\n      entryService\n        .update(id, entryObject).then(returnedEntry => {\n          setEntries(entries.map(entry => entry.id !== id ? entry : returnedEntry))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          const error_message = \"400 (Bad request). \" + error.response.data.error\n          setErrorMessage(\n            error_message\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n\n        })\n\n    } else {\n    entryService\n      .create(entryObject)\n        .then(returnedEntry => {\n        setEntries(entries.concat(returnedEntry))\n        setNewName('')\n      })\n      .catch(error => {\n        const error_message = \"400 (Bad request). \" + error.response.data.error\n        setErrorMessage(\n          error_message\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n        \n      \n\n    }\n  \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n    const deleteById = id => { \n      entryService\n        .deleteById(id).then(returnedEntry => { \n          console.log(\"Delete entry of id $ { id } ??\", returnedEntry);\n          setEntries(entries.filter(entry => entry.id !== id))\n        })\n    }\n\n  return (\n    <div>\n    <TopNavBar />\n    <Blog text = {exampleBook}/>\n    \n    {\n      /*\n      <Notification message={errorMessage} />\n      <ul>\n        <ul>\n          {entries.map(entry => \n            <Entry\n              key={entry.id}\n              entry={entry}\n              deleteById={() => deleteById(entry.id)}\n            />\n          )}\n        </ul>\n      </ul>\n      <form onSubmit={addEntry}>\n        <input placeholder=\"Name\" value={newName} onChange={handleNameChange} />\n        <input placeholder=\"Number\" value={newNumber} onChange={handleNumberChange} />\n        <button type=\"submit\">save</button>\n      </form>\n          */}\n    </div>\n  )\n}\n\nexport default App\n","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/TopNavBar.js",["52","53","54"],[],"import React, { useState, useEffect } from 'react';\nimport './TopNavbar.css';\n\nconst TopNavbar = () => {\n  const [showNavbar, setShowNavbar] = useState(true);\n\n  const handleScroll = () => {\n    const scrollY = window.scrollY;\n    setShowNavbar(scrollY === 0);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <nav className={`top-navbar ${showNavbar ? '' : 'hidden'}`}>\n      <ul>\n        <li><a href=\"#\">Home</a></li>\n        <li><a href=\"#\">About</a></li>\n        <li><a href=\"#\">Contact</a></li>\n        {/* Add more links as needed */}\n      </ul>\n    </nav>\n  );\n};\n\nexport default TopNavbar;\n","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Blog.js",["55","56"],[],"import React from 'react';\nimport './index.css';\nimport { useState } from 'react'\nimport entryService from './services/entries'\nimport Word from './Word'\nimport axios from 'axios'\n\nconst Blog = (props) => {\n  const {chosenWord, setChosenWord } = useState('')\n  const exampleBook = props.text\n  console.log(\"blog\", exampleBook);\n  const fetchWordDescription = (word) => {\n    entryService\n    .getWord(word)\n    .then(response => {\n      console.log(response)\n      if( response === undefined) {\n        //console.log(\"undefined!!\");\n        console.log(\"Could not fetch word description using this form of the word\", word)\n      const endpoint = `http://127.0.0.1:5000/pygetword/${encodeURI(word)}`;\n      axios.get(endpoint)\n        .then(response => {\n          //console.log(\"respone: \", response);\n          console.log(\"respone data: \", response.data);\n          const file = response.data[\"word\"];\n          console.log(file); // Sending the file data as the response\n          entryService\n          .getWord(word)\n          .then(response => {\n            console.log(response)})\n        })\n        .catch(err => {\n          console.error('Error occurred again', err);\n        });\n      }\n    })\n    .catch(err => {\n      \nconsole.log(\"caught an error in connecting through entryService\");\n\n    })\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <h1>{exampleBook.title}</h1>\n        <p>\n          {exampleBook.pages[\"1\"].split(\" \")\n          .map(\n            (word, index) => \n            (<Word key = {index} word = {word} fetchWordDescription = {fetchWordDescription}/>)\n          )}\n        </p>\n        {/* Add more paragraphs as needed */}\n      </div>\n      <div className=\"box\">\n        <h2>Box on the Right</h2>\n        <p>This is the box content.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;","/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Notification.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/components/Entry.js",[],[],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/services/entries.js",[],["57"],"/home/gradjaku/Documents/LangApp/1.0/LangApp23/Frontend/src/Word.js",[],[],{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":13},{"ruleId":"58","severity":1,"message":"62","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":20},{"ruleId":"58","severity":1,"message":"63","line":21,"column":10,"nodeType":"60","messageId":"61","endLine":21,"endColumn":22},{"ruleId":"58","severity":1,"message":"64","line":32,"column":9,"nodeType":"60","messageId":"61","endLine":32,"endColumn":17},{"ruleId":"58","severity":1,"message":"65","line":84,"column":9,"nodeType":"60","messageId":"61","endLine":84,"endColumn":25},{"ruleId":"58","severity":1,"message":"66","line":88,"column":9,"nodeType":"60","messageId":"61","endLine":88,"endColumn":27},{"ruleId":"58","severity":1,"message":"67","line":92,"column":11,"nodeType":"60","messageId":"61","endLine":92,"endColumn":21},{"ruleId":"68","severity":1,"message":"69","line":22,"column":13,"nodeType":"70","endLine":22,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":23,"column":13,"nodeType":"70","endLine":23,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":24,"column":13,"nodeType":"70","endLine":24,"endColumn":25},{"ruleId":"58","severity":1,"message":"71","line":9,"column":10,"nodeType":"60","messageId":"61","endLine":9,"endColumn":20},{"ruleId":"58","severity":1,"message":"72","line":9,"column":22,"nodeType":"60","messageId":"61","endLine":9,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":32,"column":1,"nodeType":"75","endLine":38,"endColumn":2,"suppressions":"76"},"no-unused-vars","'Entry' is defined but never used.","Identifier","unusedVar","'Notification' is defined but never used.","'errorMessage' is assigned a value but never used.","'addEntry' is assigned a value but never used.","'handleNameChange' is assigned a value but never used.","'handleNumberChange' is assigned a value but never used.","'deleteById' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'chosenWord' is assigned a value but never used.","'setChosenWord' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["77"],{"kind":"78","justification":"79"},"directive",""]